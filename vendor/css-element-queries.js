'use strict';

// https://github.com/marcj/css-element-queries (version 1.2.1)

/**
 * Copyright Marc J. Schmidt. See the LICENSE file at the top-level
 * directory of this distribution and at
 * https://github.com/marcj/css-element-queries/blob/master/LICENSE.
 */

// minified both ResizeSensor.js and ElementQueries.js

(function(root,factory){if(typeof define==="function"&&define.amd){define(['./ResizeSensor.js'],factory)}else if(typeof exports==="object"){module.exports=factory(require('./ResizeSensor.js'))}else{root.ElementQueries=factory(root.ResizeSensor);root.ElementQueries.listen()}}(typeof window!=='undefined'?window:this,function(ResizeSensor){var ElementQueries=function(){var cssStyleElement;var allQueries={};var idToSelectorMapping=[];function getEmSize(element){if(!element){element=document.documentElement}
var fontSize=window.getComputedStyle(element,null).fontSize;return parseFloat(fontSize)||16}
function getElementSize(element){if(!element.getBoundingClientRect){return{width:element.offsetWidth,height:element.offsetHeight}}
var rect=element.getBoundingClientRect();return{width:Math.round(rect.width),height:Math.round(rect.height)}}
function convertToPx(element,value){var numbers=value.split(/\d/);var units=numbers[numbers.length-1];value=parseFloat(value);switch(units){case "px":return value;case "em":return value*getEmSize(element);case "rem":return value*getEmSize();case "vw":return value*document.documentElement.clientWidth/100;case "vh":return value*document.documentElement.clientHeight/100;case "vmin":case "vmax":var vw=document.documentElement.clientWidth/100;var vh=document.documentElement.clientHeight/100;var chooser=Math[units==="vmin"?"min":"max"];return value*chooser(vw,vh);default:return value}}
function SetupInformation(element,id){this.element=element;var key,option,elementSize,value,actualValue,attrValues,attrValue,attrName;var attributes=['min-width','min-height','max-width','max-height'];this.call=function(){elementSize=getElementSize(this.element);attrValues={};for(key in allQueries[id]){if(!allQueries[id].hasOwnProperty(key)){continue}
option=allQueries[id][key];value=convertToPx(this.element,option.value);actualValue=option.property==='width'?elementSize.width:elementSize.height;attrName=option.mode+'-'+option.property;attrValue='';if(option.mode==='min'&&actualValue>=value){attrValue+=option.value}
if(option.mode==='max'&&actualValue<=value){attrValue+=option.value}
if(!attrValues[attrName])attrValues[attrName]='';if(attrValue&&-1===(' '+attrValues[attrName]+' ').indexOf(' '+attrValue+' ')){attrValues[attrName]+=' '+attrValue}}
for(var k in attributes){if(!attributes.hasOwnProperty(k))continue;if(attrValues[attributes[k]]){this.element.setAttribute(attributes[k],attrValues[attributes[k]].substr(1))}else{this.element.removeAttribute(attributes[k])}}}}
function setupElement(element,id){if(!element.elementQueriesSetupInformation){element.elementQueriesSetupInformation=new SetupInformation(element,id)}
if(!element.elementQueriesSensor){element.elementQueriesSensor=new ResizeSensor(element,function(){element.elementQueriesSetupInformation.call()})}}
function queueQuery(selector,mode,property,value){if(typeof(allQueries[selector])==='undefined'){allQueries[selector]=[];var id=idToSelectorMapping.length;cssStyleElement.innerHTML+='\n'+selector+' {animation: 0.1s element-queries;}';cssStyleElement.innerHTML+='\n'+selector+' > .resize-sensor {min-width: '+id+'px;}';idToSelectorMapping.push(selector)}
allQueries[selector].push({mode:mode,property:property,value:value})}
function getQuery(container){var query;if(document.querySelectorAll)query=(container)?container.querySelectorAll.bind(container):document.querySelectorAll.bind(document);if(!query&&'undefined'!==typeof $$)query=$$;if(!query&&'undefined'!==typeof jQuery)query=jQuery;if(!query){throw 'No document.querySelectorAll, jQuery or Mootools\'s $$ found.'}
return query}
function findElementQueriesElements(container){var query=getQuery(container);for(var selector in allQueries)if(allQueries.hasOwnProperty(selector)){var elements=query(selector,container);for(var i=0,j=elements.length;i<j;i++){setupElement(elements[i],selector)}}}
function attachResponsiveImage(element){var children=[];var rules=[];var sources=[];var defaultImageId=0;var lastActiveImage=-1;var loadedImages=[];for(var i in element.children){if(!element.children.hasOwnProperty(i))continue;if(element.children[i].tagName&&element.children[i].tagName.toLowerCase()==='img'){children.push(element.children[i]);var minWidth=element.children[i].getAttribute('min-width')||element.children[i].getAttribute('data-min-width');var src=element.children[i].getAttribute('data-src')||element.children[i].getAttribute('url');sources.push(src);var rule={minWidth:minWidth};rules.push(rule);if(!minWidth){defaultImageId=children.length-1;element.children[i].style.display='block'}else{element.children[i].style.display='none'}}}
lastActiveImage=defaultImageId;function check(){var imageToDisplay=!1,i;for(i in children){if(!children.hasOwnProperty(i))continue;if(rules[i].minWidth){if(element.offsetWidth>rules[i].minWidth){imageToDisplay=i}}}
if(!imageToDisplay){imageToDisplay=defaultImageId}
if(lastActiveImage!==imageToDisplay){if(!loadedImages[imageToDisplay]){var image=new Image();image.onload=function(){children[imageToDisplay].src=sources[imageToDisplay];children[lastActiveImage].style.display='none';children[imageToDisplay].style.display='block';loadedImages[imageToDisplay]=!0;lastActiveImage=imageToDisplay};image.src=sources[imageToDisplay]}else{children[lastActiveImage].style.display='none';children[imageToDisplay].style.display='block';lastActiveImage=imageToDisplay}}else{children[imageToDisplay].src=sources[imageToDisplay]}}
element.resizeSensorInstance=new ResizeSensor(element,check);check()}
function findResponsiveImages(){var query=getQuery();var elements=query('[data-responsive-image],[responsive-image]');for(var i=0,j=elements.length;i<j;i++){attachResponsiveImage(elements[i])}}
var regex=/,?[\s\t]*([^,\n]*?)((?:\[[\s\t]*?(?:min|max)-(?:width|height)[\s\t]*?[~$\^]?=[\s\t]*?"[^"]*?"[\s\t]*?])+)([^,\n\s\{]*)/mgi;var attrRegex=/\[[\s\t]*?(min|max)-(width|height)[\s\t]*?[~$\^]?=[\s\t]*?"([^"]*?)"[\s\t]*?]/mgi;function extractQuery(css){var match,smatch,attrs,attrMatch;css=css.replace(/'/g,'"');while(null!==(match=regex.exec(css))){smatch=match[1]+match[3];attrs=match[2];while(null!==(attrMatch=attrRegex.exec(attrs))){queueQuery(smatch,attrMatch[1],attrMatch[2],attrMatch[3])}}}
function readRules(rules){var selector='';if(!rules){return}
if('string'===typeof rules){rules=rules.toLowerCase();if(-1!==rules.indexOf('min-width')||-1!==rules.indexOf('max-width')){extractQuery(rules)}}else{for(var i=0,j=rules.length;i<j;i++){if(1===rules[i].type){selector=rules[i].selectorText||rules[i].cssText;if(-1!==selector.indexOf('min-height')||-1!==selector.indexOf('max-height')){extractQuery(selector)}else if(-1!==selector.indexOf('min-width')||-1!==selector.indexOf('max-width')){extractQuery(selector)}}else if(4===rules[i].type){readRules(rules[i].cssRules||rules[i].rules)}else if(3===rules[i].type){if(rules[i].styleSheet.hasOwnProperty("cssRules")){readRules(rules[i].styleSheet.cssRules)}}}}}
var defaultCssInjected=!1;this.init=function(){var animationStart='animationstart';if(typeof document.documentElement.style.webkitAnimationName!=='undefined'){animationStart='webkitAnimationStart'}else if(typeof document.documentElement.style.MozAnimationName!=='undefined'){animationStart='mozanimationstart'}else if(typeof document.documentElement.style.OAnimationName!=='undefined'){animationStart='oanimationstart'}
document.body.addEventListener(animationStart,function(e){var element=e.target;var styles=element&&window.getComputedStyle(element,null);var animationName=styles&&styles.getPropertyValue('animation-name');var requiresSetup=animationName&&(-1!==animationName.indexOf('element-queries'));if(requiresSetup){element.elementQueriesSensor=new ResizeSensor(element,function(){if(element.elementQueriesSetupInformation){element.elementQueriesSetupInformation.call()}});var sensorStyles=window.getComputedStyle(element.resizeSensor,null);var id=sensorStyles.getPropertyValue('min-width');id=parseInt(id.replace('px',''));setupElement(e.target,idToSelectorMapping[id])}});if(!defaultCssInjected){cssStyleElement=document.createElement('style');cssStyleElement.type='text/css';cssStyleElement.innerHTML='[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}';cssStyleElement.innerHTML+='\n@keyframes element-queries { 0% { visibility: inherit; } }';document.getElementsByTagName('head')[0].appendChild(cssStyleElement);defaultCssInjected=!0}
for(var i=0,j=document.styleSheets.length;i<j;i++){try{if(document.styleSheets[i].href&&0===document.styleSheets[i].href.indexOf('file://')){console.warn("CssElementQueries: unable to parse local css files, "+document.styleSheets[i].href)}
readRules(document.styleSheets[i].cssRules||document.styleSheets[i].rules||document.styleSheets[i].cssText)}catch(e){}}
findResponsiveImages()};this.findElementQueriesElements=function(container){findElementQueriesElements(container)};this.update=function(){this.init()}};ElementQueries.update=function(){ElementQueries.instance.update()};ElementQueries.detach=function(element){if(element.elementQueriesSetupInformation){element.elementQueriesSensor.detach();delete element.elementQueriesSetupInformation;delete element.elementQueriesSensor}else if(element.resizeSensorInstance){element.resizeSensorInstance.detach();delete element.resizeSensorInstance}};ElementQueries.init=function(){if(!ElementQueries.instance){ElementQueries.instance=new ElementQueries()}
ElementQueries.instance.init()};var domLoaded=function(callback){if(document.addEventListener){document.addEventListener('DOMContentLoaded',callback,!1)}
else if(/KHTML|WebKit|iCab/i.test(navigator.userAgent)){var DOMLoadTimer=setInterval(function(){if(/loaded|complete/i.test(document.readyState)){callback();clearInterval(DOMLoadTimer)}},10)}
else window.onload=callback};ElementQueries.findElementQueriesElements=function(container){ElementQueries.instance.findElementQueriesElements(container)};ElementQueries.listen=function(){domLoaded(ElementQueries.init)};return ElementQueries}));(function(root,factory){if(typeof define==="function"&&define.amd){define(factory)}else if(typeof exports==="object"){module.exports=factory()}else{root.ResizeSensor=factory()}}(typeof window!=='undefined'?window:this,function(){if(typeof window==="undefined"){return null}
var globalWindow=typeof window!='undefined'&&window.Math==Math?window:typeof self!='undefined'&&self.Math==Math?self:Function('return this')();var requestAnimationFrame=globalWindow.requestAnimationFrame||globalWindow.mozRequestAnimationFrame||globalWindow.webkitRequestAnimationFrame||function(fn){return globalWindow.setTimeout(fn,20)};function forEachElement(elements,callback){var elementsType=Object.prototype.toString.call(elements);var isCollectionTyped=('[object Array]'===elementsType||('[object NodeList]'===elementsType)||('[object HTMLCollection]'===elementsType)||('[object Object]'===elementsType)||('undefined'!==typeof jQuery&&elements instanceof jQuery)||('undefined'!==typeof Elements&&elements instanceof Elements));var i=0,j=elements.length;if(isCollectionTyped){for(;i<j;i++){callback(elements[i])}}else{callback(elements)}}
function getElementSize(element){if(!element.getBoundingClientRect){return{width:element.offsetWidth,height:element.offsetHeight}}
var rect=element.getBoundingClientRect();return{width:Math.round(rect.width),height:Math.round(rect.height)}}
function setStyle(element,style){Object.keys(style).forEach(function(key){element.style[key]=style[key]})}
var ResizeSensor=function(element,callback){function EventQueue(){var q=[];this.add=function(ev){q.push(ev)};var i,j;this.call=function(sizeInfo){for(i=0,j=q.length;i<j;i++){q[i].call(this,sizeInfo)}};this.remove=function(ev){var newQueue=[];for(i=0,j=q.length;i<j;i++){if(q[i]!==ev)newQueue.push(q[i])}
q=newQueue};this.length=function(){return q.length}}
function attachResizeEvent(element,resized){if(!element)return;if(element.resizedAttached){element.resizedAttached.add(resized);return}
element.resizedAttached=new EventQueue();element.resizedAttached.add(resized);element.resizeSensor=document.createElement('div');element.resizeSensor.dir='ltr';element.resizeSensor.className='resize-sensor';var style={pointerEvents:'none',position:'absolute',left:'0px',top:'0px',right:'0px',bottom:'0px',overflow:'hidden',zIndex:'-1',visibility:'hidden',maxWidth:'100%'};var styleChild={position:'absolute',left:'0px',top:'0px',transition:'0s',};setStyle(element.resizeSensor,style);var expand=document.createElement('div');expand.className='resize-sensor-expand';setStyle(expand,style);var expandChild=document.createElement('div');setStyle(expandChild,styleChild);expand.appendChild(expandChild);var shrink=document.createElement('div');shrink.className='resize-sensor-shrink';setStyle(shrink,style);var shrinkChild=document.createElement('div');setStyle(shrinkChild,styleChild);setStyle(shrinkChild,{width:'200%',height:'200%'});shrink.appendChild(shrinkChild);element.resizeSensor.appendChild(expand);element.resizeSensor.appendChild(shrink);element.appendChild(element.resizeSensor);var computedStyle=window.getComputedStyle(element);var position=computedStyle?computedStyle.getPropertyValue('position'):null;if('absolute'!==position&&'relative'!==position&&'fixed'!==position){element.style.position='relative'}
var dirty,rafId;var size=getElementSize(element);var lastWidth=0;var lastHeight=0;var initialHiddenCheck=!0;var lastAnimationFrame=0;var resetExpandShrink=function(){var width=element.offsetWidth;var height=element.offsetHeight;expandChild.style.width=(width+10)+'px';expandChild.style.height=(height+10)+'px';expand.scrollLeft=width+10;expand.scrollTop=height+10;shrink.scrollLeft=width+10;shrink.scrollTop=height+10};var reset=function(){if(initialHiddenCheck){var invisible=element.offsetWidth===0&&element.offsetHeight===0;if(invisible){if(!lastAnimationFrame){lastAnimationFrame=requestAnimationFrame(function(){lastAnimationFrame=0;reset()})}
return}else{initialHiddenCheck=!1}}
resetExpandShrink()};element.resizeSensor.resetSensor=reset;var onResized=function(){rafId=0;if(!dirty)return;lastWidth=size.width;lastHeight=size.height;if(element.resizedAttached){element.resizedAttached.call(size)}};var onScroll=function(){size=getElementSize(element);dirty=size.width!==lastWidth||size.height!==lastHeight;if(dirty&&!rafId){rafId=requestAnimationFrame(onResized)}
reset()};var addEvent=function(el,name,cb){if(el.attachEvent){el.attachEvent('on'+name,cb)}else{el.addEventListener(name,cb)}};addEvent(expand,'scroll',onScroll);addEvent(shrink,'scroll',onScroll);requestAnimationFrame(reset)}
forEachElement(element,function(elem){attachResizeEvent(elem,callback)});this.detach=function(ev){ResizeSensor.detach(element,ev)};this.reset=function(){element.resizeSensor.resetSensor()}};ResizeSensor.reset=function(element){forEachElement(element,function(elem){elem.resizeSensor.resetSensor()})};ResizeSensor.detach=function(element,ev){forEachElement(element,function(elem){if(!elem)return;if(elem.resizedAttached&&typeof ev==="function"){elem.resizedAttached.remove(ev);if(elem.resizedAttached.length())return}
if(elem.resizeSensor){if(elem.contains(elem.resizeSensor)){elem.removeChild(elem.resizeSensor)}
delete elem.resizeSensor;delete elem.resizedAttached}})};if(typeof MutationObserver!=="undefined"){var observer=new MutationObserver(function(mutations){for(var i in mutations){if(mutations.hasOwnProperty(i)){var items=mutations[i].addedNodes;for(var j=0;j<items.length;j++){if(items[j].resizeSensor){ResizeSensor.reset(items[j])}}}}});document.addEventListener("DOMContentLoaded",function(event){observer.observe(document.body,{childList:!0,subtree:!0,})})}
return ResizeSensor}))
